delete all containers: docker container rm -f $(docker container ls -aq)
delete all images: docker image rm -f $(docker image ls)
build image: docker build -t <name> <path>

user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {
	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_prefer_server_ciphers on;

	server {
		listen 443 default ssl;
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_prefer_server_ciphers on;
		ssl_certificate {{NGINX_CERT}};
		ssl_certificate_key {{NGINX_KEY}};
		
		root /var/www/wordpress;
		server_name {{DOMAIN_NAME}};
		index index.php index.html index.htm;

		# Send files that don't exist to 404
		location / {
			try_files $uri $uri/ =404;
		}
		
		# PHP Handling
		location ~ [^/]\.php(/|$) {
			try_files $uri =404;
			fastcgi_pass wordpress:9000;
			include fastcgi_params;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	    }
	}

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}



# Start the MariaDB service
service mariadb start -p$MYSQL_ROOT_PASSWORD

# Create a database if it does not already exist
mariadb -uroot -p$MYSQL_ROOT_PASSWORD -e "CREATE DATABASE IF NOT EXISTS \`${MYSQL_DATABASE}\`;"

# Create a user if it does not already exist, identified by the specified password
mariadb -uroot -p$MYSQL_ROOT_PASSWORD -e "CREATE USER IF NOT EXISTS \`${MYSQL_USER}\`@'localhost' IDENTIFIED BY '${MYSQL_PASSWORD}';"

# Grant all privileges on the specified database to the specified user, allowing access from any host
mariadb -uroot -p$MYSQL_ROOT_PASSWORD -e "GRANT ALL PRIVILEGES ON \`${MYSQL_DATABASE}\`.* TO \`${MYSQL_USER}\`@'%' IDENTIFIED BY '${MYSQL_PASSWORD}';"

# Change the password for the 'root' user on the local machine
mariadb -uroot -p$MYSQL_ROOT_PASSWORD -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}'; FLUSH PRIVILEGES;"

# Shut down MariaDB, waiting for all slaves to catch up
mariadb-admin -p$MYSQL_ROOT_PASSWORD -uroot -p $MYSQL_ROOT_PASSWORD --wait-for-all-slaves shutdown

# Start the MariaDB server in a safe mode
mysqld_safe










RUN apt-get update
RUN apt-get install wget -yq
RUN apt-get install vim -yq
RUN apt-get install curl -yq
RUN apt-get install sudo -yq

RUN apt-get update
RUN apt-get upgrade -y
RUN apt-get install -yq --no-install-recommends php7.4-fpm php7.4-mysql